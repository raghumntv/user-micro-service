name: Nightly test execution

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout 
        uses: actions/checkout@v3 

      - name: Set up Node
        uses: actions/setup-node@v3 
        with: 
          node-version: ${{ matrix.node-version }}

      - name: build
        run: |
          docker-compose build   
              
  # Deploy job to fit render.com
  deploy:
    name: Deploy
    needs: [build] # Our tests must pass in order to run the deploy job
    runs-on: ubuntu-latest

    steps: 
      - name: Deploy to staging
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }} # Can be found as part of the Deploy Hook
          api-key: ${{ secrets.RENDER_API_KEY }} # Create your API key in Render Dashboard > Account Settings
      - name: Deploy to prod
        run: |
          echo "code deployed to staging"

  e2e-tests:
    name: E2E tests
    needs: [deploy]
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Run tests
        run: |
          npm install
          npm test

  slack-notfication:
    name: Slack Notification
    needs: [e2e-tests]
    runs-on: ubuntu-latest

#      SLACK_USERNAME: rtCamp

    steps:
      - uses: actions/checkout@v2
      - name: Notify slack
#        id: slack
#        uses: slackapi/slack-github-action@v1.24.0
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: $${{ secrets.SLACK_WEBHOOK_URL }}
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: otaku-2-workshop-slack-integration-testing
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          #      SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: "GitHub build result: ${{ job.status }}\n${{ github.event.head_commit.url }}"
          SLACK_TITLE: User App action
#        with:
#          channel-id: 'C0612NY969K'
#          slack-message: "GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
#          slack-message: "GitHub build result: ${{ job.status }}\n${{ github.event.head_commit.url }}"
#        uses: pullreminders/slack-action@master
#        with:
#          status: ${{ job.status }}
#          steps: ${{ toJson(steps) }}
#          channel: '#otaku-2-workshop-slack-integration-testing'
#          args: '{\"channel\":\"C0612NY969K\",\"text\":\"Hello world\"}'
#      - name: Send Slack Notification
#        uses: act10ns/slack@v1
#        with:
#          status: ${{ job.status }}
#          steps: ${{ toJson(steps) }}
#          channel: '#otaku-2-workshop-slack-integration-testing'
